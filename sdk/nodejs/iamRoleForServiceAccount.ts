// *** WARNING: this file was generated by Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

import * as pulumiAws from "@pulumi/aws";

export class IamRoleForServiceAccount extends pulumi.ComponentResource {
    /** @internal */
    public static readonly __pulumiType = 'awsIam:index:IamRoleForServiceAccount';

    /**
     * Returns true if the given object is an instance of IamRoleForServiceAccount.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IamRoleForServiceAccount {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IamRoleForServiceAccount.__pulumiType;
    }

    /**
     * The IAM role created
     */
    public /*out*/ readonly role!: pulumi.Output<pulumiAws.iam.Role>;

    /**
     * Create a IamRoleForServiceAccount resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IamRoleForServiceAccountArgs, opts?: pulumi.ComponentResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (!opts.id) {
            if ((!args || args.namespace === undefined) && !opts.urn) {
                throw new Error("Missing required property 'namespace'");
            }
            if ((!args || args.providerArn === undefined) && !opts.urn) {
                throw new Error("Missing required property 'providerArn'");
            }
            if ((!args || args.serviceAccount === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceAccount'");
            }
            resourceInputs["namespace"] = args ? args.namespace : undefined;
            resourceInputs["providerArn"] = args ? args.providerArn : undefined;
            resourceInputs["rolePath"] = args ? args.rolePath : undefined;
            resourceInputs["serviceAccount"] = args ? args.serviceAccount : undefined;
            resourceInputs["role"] = undefined /*out*/;
        } else {
            resourceInputs["role"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IamRoleForServiceAccount.__pulumiType, name, resourceInputs, opts, true /*remote*/);
    }
}

/**
 * The set of arguments for constructing a IamRoleForServiceAccount resource.
 */
export interface IamRoleForServiceAccountArgs {
    /**
     * The EKS namespace that will use the role for IAM authentication.
     */
    namespace: pulumi.Input<string>;
    /**
     * The OIDC provider ARN.
     */
    providerArn: pulumi.Input<string>;
    /**
     * The IAM path where the role exists.
     */
    rolePath?: pulumi.Input<string>;
    /**
     * The EKS service account that will use the role for IAM authentication.
     */
    serviceAccount: pulumi.Input<string>;
}
