// *** WARNING: this file was generated by Pulumi SDK Generator. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AwsIam
{
    [AwsIamResourceType("awsIam:index:IamRoleForServiceAccount")]
    public partial class IamRoleForServiceAccount : Pulumi.ComponentResource
    {
        /// <summary>
        /// The IAM role created
        /// </summary>
        [Output("role")]
        public Output<Pulumi.Aws.Iam.Role> Role { get; private set; } = null!;


        /// <summary>
        /// Create a IamRoleForServiceAccount resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public IamRoleForServiceAccount(string name, IamRoleForServiceAccountArgs args, ComponentResourceOptions? options = null)
            : base("awsIam:index:IamRoleForServiceAccount", name, args ?? new IamRoleForServiceAccountArgs(), MakeResourceOptions(options, ""), remote: true)
        {
        }

        private static ComponentResourceOptions MakeResourceOptions(ComponentResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new ComponentResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = ComponentResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
    }

    public sealed class IamRoleForServiceAccountArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The EKS namespace that will use the role for IAM authentication.
        /// </summary>
        [Input("namespace", required: true)]
        public Input<string> Namespace { get; set; } = null!;

        /// <summary>
        /// The OIDC provider ARN.
        /// </summary>
        [Input("providerArn", required: true)]
        public Input<string> ProviderArn { get; set; } = null!;

        /// <summary>
        /// The IAM path where the role exists.
        /// </summary>
        [Input("rolePath")]
        public Input<string>? RolePath { get; set; }

        /// <summary>
        /// The EKS service account that will use the role for IAM authentication.
        /// </summary>
        [Input("serviceAccount", required: true)]
        public Input<string> ServiceAccount { get; set; } = null!;

        public IamRoleForServiceAccountArgs()
        {
        }
    }
}
